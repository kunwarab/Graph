#include <bits/stdc++.h>
using namespace std;
using ii = pair<int, int>;
using lli = long long;
#define F first
#define S second
#define MP make_pair

int n, m;
vector<ii> g[100100];
lli dis[100100];
lli vis[100100];

void DijKstra(int sc)
{
    for (int i = 1; i <= n; i++)
    {
        dis[i] = 1e18;
        vis[i] = 0;
    }
    priority_queue<ii> pq;
    dis[sc] = 0;
    pq.push(MP(-0, sc));
    while (!pq.empty())
    {
        ii fs = pq.top();
        pq.pop();
        if (vis[fs.S])
        {
            continue;
        }
        vis[fs.F] = 1;
        for (auto v : g[fs.S])
        {
            int neigh = v.F;
            int weigh = v.S;
            if (dis[neigh] > dis[fs.F] + weigh)
            {
                dis[neigh] = dis[fs.F] + weigh;
                pq.push(MP(dis[neigh], neigh));
            }
        }
    }
}

void solve()
{
    cin >> n >> m;

    for (int i = 0; i < m; i++)
    {
        int a, b, c;
        cin >> a >> b >> c;
        g[a].push_back({b, c});
        g[b].push_back({a, c});
    }
    DijKstra(1);
}

int main()
{
    solve();
}
